// Keycloak JavaScript adapter - Version minimale pour test
class Keycloak {
    constructor(config) {
        this.config = config;
        this.authenticated = false;
        this.token = null;
        this.tokenParsed = null;
        this.realm = config.realm;
        this.clientId = config.clientId;
        this.authServerUrl = config.url;
    }

    init(options = {}) {
        return new Promise((resolve, reject) => {
            console.log('Initializing Keycloak...');
            
            // Simulation d'une authentification pour test
            if (options.onLoad === 'login-required') {
                // Simuler une authentification rÃ©ussie
                this.authenticated = true;
                this.token = 'mock-token';
                this.tokenParsed = {
                    preferred_username: 'testuser',
                    email: 'test@example.com',
                    sub: 'test-user-id'
                };
                
                console.log('Mock authentication successful');
                resolve(this.authenticated);
            } else {
                this.authenticated = false;
                resolve(this.authenticated);
            }
        });
    }

    login(options = {}) {
        return new Promise((resolve) => {
            console.log('Login requested');
            this.authenticated = true;
            this.token = 'mock-token';
            this.tokenParsed = {
                preferred_username: 'testuser',
                email: 'test@example.com',
                sub: 'test-user-id'
            };
            resolve();
        });
    }

    logout(options = {}) {
        return new Promise((resolve) => {
            console.log('Logout requested');
            this.authenticated = false;
            this.token = null;
            this.tokenParsed = null;
            resolve();
        });
    }

    updateToken(minValidity = 5) {
        return new Promise((resolve) => {
            console.log('Token update requested');
            resolve(true);
        });
    }

    isTokenExpired(minValidity = 0) {
        return false;
    }
}

// Rendre Keycloak disponible globalement
window.Keycloak = Keycloak;
