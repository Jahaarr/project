version: '3.8'

services:
  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_LOG_LEVEL: INFO
      KC_METRICS_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    networks:
      - iam-network

  # PostgreSQL pour Keycloak
  postgres:
    image: postgres:15
    container_name: postgres-keycloak
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - iam-network

  # Zookeeper pour Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - iam-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - iam-network

  # Kafka UI (optionnel, pour visualiser Kafka)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - iam-network

  # Application Flask IAM
  iam-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: iam-flask-app
    depends_on:
      - kafka
      - keycloak
    ports:
      - "5000:5000"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KEYCLOAK_SERVER_URL: http://keycloak:8080/
      KEYCLOAK_REALM: iam-realm
      KEYCLOAK_CLIENT_ID: iam-client
      KEYCLOAK_CLIENT_SECRET: EfvtQ2dSaPWzvK9iR8CpspEDsadsKfxt
    volumes:
      - ./app.py:/app/app.py
      - ./keycloak_config.py:/app/keycloak_config.py
      - ./consumer.py:/app/consumer.py
      - ./static:/app/static
    networks:
      - iam-network

  # Consumer pour l'analyse des anomalies
  anomaly-detector:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    container_name: anomaly-detector
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    volumes:
      - ./consumer.py:/app/consumer.py
    networks:
      - iam-network

volumes:
  postgres_data:

networks:
  iam-network:
    driver: bridge